"""Initial migration: create all tables

Revision ID: 36b9145ff124
Revises: 
Create Date: 2025-07-08 09:20:01.836379

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '36b9145ff124'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('interest_keywords',
    sa.Column('id', sa.String(length=36), nullable=False, comment='키워드 ID'),
    sa.Column('keyword', sa.String(length=100), nullable=False, comment='키워드'),
    sa.Column('category', sa.String(length=30), nullable=False, comment='카테고리'),
    sa.Column('synonyms', sa.String(length=500), nullable=True, comment='동의어 (JSON)'),
    sa.Column('related_keywords', sa.String(length=500), nullable=True, comment='관련 키워드 (JSON)'),
    sa.Column('usage_count', sa.Integer(), nullable=True, comment='사용 횟수'),
    sa.Column('confidence_score', sa.Float(), nullable=True, comment='신뢰도 점수'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='활성 상태'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='생성일시'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('keyword')
    )
    op.create_index(op.f('ix_interest_keywords_id'), 'interest_keywords', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False, comment='사용자 ID'),
    sa.Column('name', sa.String(length=50), nullable=False, comment='사용자 이름'),
    sa.Column('age', sa.Integer(), nullable=True, comment='나이'),
    sa.Column('gender', sa.Enum('M', 'F', 'OTHER'), nullable=True, comment='성별'),
    sa.Column('speech_style', sa.Text(), nullable=True, comment='말투 스타일 (JSON 형태 저장 가능)'),
    sa.Column('phone', sa.String(length=20), nullable=True, comment='연락처 (응급시 사용)'),
    sa.Column('profile_image', sa.String(length=255), nullable=True, comment='프로필 이미지 경로'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='활성 상태'),
    sa.Column('last_login', sa.DateTime(), nullable=True, comment='마지막 로그인 시간'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='생성일시'),
    sa.Column('updated_at', sa.DateTime(), nullable=True, comment='수정일시'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('chat_logs',
    sa.Column('id', sa.String(length=36), nullable=False, comment='대화 로그 ID'),
    sa.Column('user_id', sa.String(length=36), nullable=False, comment='사용자 ID'),
    sa.Column('role', sa.Enum('user', 'bot'), nullable=False, comment='발화 주체'),
    sa.Column('message', sa.Text(), nullable=False, comment='대화 내용'),
    sa.Column('emotion', sa.String(length=20), nullable=True, comment='감정 태그 (기쁨, 우울, 화남, 평온 등)'),
    sa.Column('emotion_score', sa.Float(), nullable=True, comment='감정 점수 (-1.0 ~ 1.0)'),
    sa.Column('message_type', sa.Enum('text', 'button', 'medication', 'mood'), nullable=True, comment='메시지 유형'),
    sa.Column('session_id', sa.String(length=100), nullable=True, comment='대화 세션 ID'),
    sa.Column('qdrant_vector_id', sa.String(length=100), nullable=True, comment='Qdrant 벡터 ID (연동용)'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='생성일시'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_logs_id'), 'chat_logs', ['id'], unique=False)
    op.create_table('chat_sessions',
    sa.Column('id', sa.String(length=36), nullable=False, comment='세션 ID'),
    sa.Column('user_id', sa.String(length=36), nullable=False, comment='사용자 ID'),
    sa.Column('session_id', sa.String(length=100), nullable=False, comment='세션 ID'),
    sa.Column('start_time', sa.DateTime(), nullable=True, comment='세션 시작 시간'),
    sa.Column('end_time', sa.DateTime(), nullable=True, comment='세션 종료 시간'),
    sa.Column('message_count', sa.Integer(), nullable=True, comment='메시지 수'),
    sa.Column('avg_emotion_score', sa.Float(), nullable=True, comment='평균 감정 점수'),
    sa.Column('session_summary', sa.Text(), nullable=True, comment='세션 요약'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id')
    )
    op.create_index(op.f('ix_chat_sessions_id'), 'chat_sessions', ['id'], unique=False)
    op.create_table('emotion_summaries',
    sa.Column('id', sa.String(length=36), nullable=False, comment='요약 ID'),
    sa.Column('user_id', sa.String(length=36), nullable=False, comment='사용자 ID'),
    sa.Column('summary_date', sa.DateTime(), nullable=False, comment='요약 날짜'),
    sa.Column('period_type', sa.Enum('daily', 'weekly', 'monthly'), nullable=False, comment='기간 유형'),
    sa.Column('dominant_emotion', sa.String(length=20), nullable=True, comment='주요 감정'),
    sa.Column('avg_intensity', sa.Float(), nullable=True, comment='평균 감정 강도'),
    sa.Column('emotion_count', sa.Integer(), nullable=True, comment='감정 기록 수'),
    sa.Column('emotion_distribution', sa.Text(), nullable=True, comment='감정 분포 (JSON)'),
    sa.Column('summary_text', sa.Text(), nullable=True, comment='감정 요약 텍스트'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='생성일시'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_emotion_summaries_id'), 'emotion_summaries', ['id'], unique=False)
    op.create_table('interest_trends',
    sa.Column('id', sa.String(length=36), nullable=False, comment='트렌드 ID'),
    sa.Column('user_id', sa.String(length=36), nullable=False, comment='사용자 ID'),
    sa.Column('trend_date', sa.DateTime(), nullable=False, comment='트렌드 날짜'),
    sa.Column('period_type', sa.String(length=10), nullable=False, comment='기간 유형 (daily, weekly)'),
    sa.Column('top_interests', sa.String(length=500), nullable=True, comment='상위 관심사 (JSON)'),
    sa.Column('total_mentions', sa.Integer(), nullable=True, comment='총 언급 횟수'),
    sa.Column('new_interests', sa.Integer(), nullable=True, comment='새로운 관심사 수'),
    sa.Column('category_distribution', sa.String(length=1000), nullable=True, comment='카테고리 분포 (JSON)'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='생성일시'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_interest_trends_id'), 'interest_trends', ['id'], unique=False)
    op.create_table('interests',
    sa.Column('id', sa.String(length=36), nullable=False, comment='관심사 ID'),
    sa.Column('user_id', sa.String(length=36), nullable=False, comment='사용자 ID'),
    sa.Column('keyword', sa.String(length=50), nullable=False, comment='관심사 키워드'),
    sa.Column('category', sa.String(length=30), nullable=True, comment='카테고리 (가족, 취미, 건강, 음식 등)'),
    sa.Column('weight', sa.Float(), nullable=True, comment='관심도 가중치'),
    sa.Column('mentioned_count', sa.Integer(), nullable=True, comment='언급 횟수'),
    sa.Column('last_mentioned', sa.DateTime(), nullable=True, comment='마지막 언급 시간'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='활성 상태'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='생성일시'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_interests_id'), 'interests', ['id'], unique=False)
    op.create_table('schedule_stats',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('stat_date', sa.Date(), nullable=False, comment='통계 날짜'),
    sa.Column('period_type', sa.String(length=20), nullable=False, comment='기간 유형'),
    sa.Column('total_scheduled', sa.Integer(), nullable=True, comment='총 예정 일정'),
    sa.Column('total_completed', sa.Integer(), nullable=True, comment='총 완료 일정'),
    sa.Column('total_missed', sa.Integer(), nullable=True, comment='총 미완료 일정'),
    sa.Column('completion_rate', sa.Float(), nullable=True, comment='완료율'),
    sa.Column('type_breakdown', sa.JSON(), nullable=True, comment='유형별 분류'),
    sa.Column('priority_breakdown', sa.JSON(), nullable=True, comment='우선순위별 분류'),
    sa.Column('hourly_completion', sa.JSON(), nullable=True, comment='시간대별 완료율'),
    sa.Column('average_completion_time', sa.Float(), nullable=True, comment='평균 완료 시간 (분)'),
    sa.Column('productivity_score', sa.Float(), nullable=True, comment='생산성 점수'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schedule_stats_id'), 'schedule_stats', ['id'], unique=False)
    op.create_index(op.f('ix_schedule_stats_stat_date'), 'schedule_stats', ['stat_date'], unique=False)
    op.create_index(op.f('ix_schedule_stats_user_id'), 'schedule_stats', ['user_id'], unique=False)
    op.create_table('schedule_templates',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False, comment='템플릿 이름'),
    sa.Column('description', sa.Text(), nullable=True, comment='템플릿 설명'),
    sa.Column('schedule_type', sa.String(length=50), nullable=False, comment='일정 유형'),
    sa.Column('default_duration_minutes', sa.Integer(), nullable=True, comment='기본 소요 시간 (분)'),
    sa.Column('default_reminder_minutes', sa.JSON(), nullable=True, comment='기본 알림 시간'),
    sa.Column('default_priority', sa.String(length=20), nullable=True, comment='기본 우선순위'),
    sa.Column('template_data', sa.JSON(), nullable=True, comment='템플릿 데이터'),
    sa.Column('usage_count', sa.Integer(), nullable=True, comment='사용 횟수'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schedule_templates_id'), 'schedule_templates', ['id'], unique=False)
    op.create_index(op.f('ix_schedule_templates_user_id'), 'schedule_templates', ['user_id'], unique=False)
    op.create_table('schedules',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False, comment='일정 제목'),
    sa.Column('schedule_type', sa.String(length=50), nullable=False, comment='일정 유형'),
    sa.Column('description', sa.Text(), nullable=True, comment='일정 설명'),
    sa.Column('location', sa.String(length=200), nullable=True, comment='장소'),
    sa.Column('priority', sa.String(length=20), nullable=False, comment='우선순위'),
    sa.Column('start_datetime', sa.DateTime(), nullable=False, comment='시작 날짜/시간'),
    sa.Column('end_datetime', sa.DateTime(), nullable=True, comment='종료 날짜/시간'),
    sa.Column('is_all_day', sa.Boolean(), nullable=True, comment='종일 일정 여부'),
    sa.Column('recurrence_type', sa.String(length=20), nullable=True, comment='반복 유형'),
    sa.Column('recurrence_interval', sa.Integer(), nullable=True, comment='반복 간격'),
    sa.Column('recurrence_days', sa.JSON(), nullable=True, comment='반복 요일'),
    sa.Column('recurrence_end_date', sa.Date(), nullable=True, comment='반복 종료 날짜'),
    sa.Column('reminder_minutes', sa.JSON(), nullable=True, comment='알림 시간 (분 단위)'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='일정 상태'),
    sa.Column('additional_data', sa.JSON(), nullable=True, comment='추가 메타데이터'),
    sa.Column('notes', sa.Text(), nullable=True, comment='메모'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schedules_id'), 'schedules', ['id'], unique=False)
    op.create_index(op.f('ix_schedules_schedule_type'), 'schedules', ['schedule_type'], unique=False)
    op.create_index(op.f('ix_schedules_start_datetime'), 'schedules', ['start_datetime'], unique=False)
    op.create_index(op.f('ix_schedules_status'), 'schedules', ['status'], unique=False)
    op.create_index(op.f('ix_schedules_user_id'), 'schedules', ['user_id'], unique=False)
    op.create_table('emotions',
    sa.Column('id', sa.String(length=36), nullable=False, comment='감정 ID'),
    sa.Column('user_id', sa.String(length=36), nullable=False, comment='사용자 ID'),
    sa.Column('emotion', sa.String(length=20), nullable=False, comment='감정 유형'),
    sa.Column('intensity', sa.Float(), nullable=False, comment='감정 강도 (0.0 ~ 1.0)'),
    sa.Column('context', sa.Text(), nullable=True, comment='감정 발생 맥락'),
    sa.Column('trigger_message_id', sa.String(length=36), nullable=True, comment='감정을 유발한 메시지 ID'),
    sa.Column('detected_method', sa.Enum('rule_based', 'ml_model', 'manual'), nullable=True, comment='감정 감지 방법'),
    sa.Column('detected_at', sa.DateTime(), nullable=True, comment='감지일시'),
    sa.ForeignKeyConstraint(['trigger_message_id'], ['chat_logs.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_emotions_id'), 'emotions', ['id'], unique=False)
    op.create_table('interest_logs',
    sa.Column('id', sa.String(length=36), nullable=False, comment='로그 ID'),
    sa.Column('user_id', sa.String(length=36), nullable=False, comment='사용자 ID'),
    sa.Column('interest_id', sa.String(length=36), nullable=True, comment='관심사 ID'),
    sa.Column('category', sa.String(length=30), nullable=False, comment='관심사 카테고리'),
    sa.Column('keyword', sa.String(length=50), nullable=False, comment='감지된 키워드'),
    sa.Column('context', sa.String(length=500), nullable=True, comment='언급 맥락'),
    sa.Column('detection_method', sa.String(length=20), nullable=True, comment='감지 방법'),
    sa.Column('confidence', sa.Float(), nullable=True, comment='신뢰도'),
    sa.Column('created_at', sa.DateTime(), nullable=True, comment='생성일시'),
    sa.ForeignKeyConstraint(['interest_id'], ['interests.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_interest_logs_id'), 'interest_logs', ['id'], unique=False)
    op.create_table('reminders',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('schedule_id', sa.String(length=36), nullable=False),
    sa.Column('reminder_datetime', sa.DateTime(), nullable=False, comment='알림 시간'),
    sa.Column('message', sa.Text(), nullable=True, comment='알림 메시지'),
    sa.Column('reminder_type', sa.String(length=20), nullable=True, comment='알림 유형'),
    sa.Column('is_sent', sa.Boolean(), nullable=True, comment='발송 여부'),
    sa.Column('sent_at', sa.DateTime(), nullable=True, comment='발송 시간'),
    sa.Column('is_acknowledged', sa.Boolean(), nullable=True, comment='확인 여부'),
    sa.Column('acknowledged_at', sa.DateTime(), nullable=True, comment='확인 시간'),
    sa.Column('snooze_count', sa.Integer(), nullable=True, comment='스누즈 횟수'),
    sa.Column('snooze_until', sa.DateTime(), nullable=True, comment='스누즈 종료 시간'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['schedule_id'], ['schedules.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reminders_id'), 'reminders', ['id'], unique=False)
    op.create_index(op.f('ix_reminders_reminder_datetime'), 'reminders', ['reminder_datetime'], unique=False)
    op.create_index(op.f('ix_reminders_schedule_id'), 'reminders', ['schedule_id'], unique=False)
    op.create_index(op.f('ix_reminders_user_id'), 'reminders', ['user_id'], unique=False)
    op.create_table('schedule_logs',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('schedule_id', sa.String(length=36), nullable=False),
    sa.Column('scheduled_datetime', sa.DateTime(), nullable=False, comment='예정된 날짜/시간'),
    sa.Column('completed_at', sa.DateTime(), nullable=True, comment='완료 시간'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='완료 상태'),
    sa.Column('notes', sa.Text(), nullable=True, comment='메모'),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['schedule_id'], ['schedules.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schedule_logs_id'), 'schedule_logs', ['id'], unique=False)
    op.create_index(op.f('ix_schedule_logs_schedule_id'), 'schedule_logs', ['schedule_id'], unique=False)
    op.create_index(op.f('ix_schedule_logs_user_id'), 'schedule_logs', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_schedule_logs_user_id'), table_name='schedule_logs')
    op.drop_index(op.f('ix_schedule_logs_schedule_id'), table_name='schedule_logs')
    op.drop_index(op.f('ix_schedule_logs_id'), table_name='schedule_logs')
    op.drop_table('schedule_logs')
    op.drop_index(op.f('ix_reminders_user_id'), table_name='reminders')
    op.drop_index(op.f('ix_reminders_schedule_id'), table_name='reminders')
    op.drop_index(op.f('ix_reminders_reminder_datetime'), table_name='reminders')
    op.drop_index(op.f('ix_reminders_id'), table_name='reminders')
    op.drop_table('reminders')
    op.drop_index(op.f('ix_interest_logs_id'), table_name='interest_logs')
    op.drop_table('interest_logs')
    op.drop_index(op.f('ix_emotions_id'), table_name='emotions')
    op.drop_table('emotions')
    op.drop_index(op.f('ix_schedules_user_id'), table_name='schedules')
    op.drop_index(op.f('ix_schedules_status'), table_name='schedules')
    op.drop_index(op.f('ix_schedules_start_datetime'), table_name='schedules')
    op.drop_index(op.f('ix_schedules_schedule_type'), table_name='schedules')
    op.drop_index(op.f('ix_schedules_id'), table_name='schedules')
    op.drop_table('schedules')
    op.drop_index(op.f('ix_schedule_templates_user_id'), table_name='schedule_templates')
    op.drop_index(op.f('ix_schedule_templates_id'), table_name='schedule_templates')
    op.drop_table('schedule_templates')
    op.drop_index(op.f('ix_schedule_stats_user_id'), table_name='schedule_stats')
    op.drop_index(op.f('ix_schedule_stats_stat_date'), table_name='schedule_stats')
    op.drop_index(op.f('ix_schedule_stats_id'), table_name='schedule_stats')
    op.drop_table('schedule_stats')
    op.drop_index(op.f('ix_interests_id'), table_name='interests')
    op.drop_table('interests')
    op.drop_index(op.f('ix_interest_trends_id'), table_name='interest_trends')
    op.drop_table('interest_trends')
    op.drop_index(op.f('ix_emotion_summaries_id'), table_name='emotion_summaries')
    op.drop_table('emotion_summaries')
    op.drop_index(op.f('ix_chat_sessions_id'), table_name='chat_sessions')
    op.drop_table('chat_sessions')
    op.drop_index(op.f('ix_chat_logs_id'), table_name='chat_logs')
    op.drop_table('chat_logs')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_interest_keywords_id'), table_name='interest_keywords')
    op.drop_table('interest_keywords')
    # ### end Alembic commands ###
